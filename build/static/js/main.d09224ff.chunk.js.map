{"version":3,"sources":["components/EmployeeTable/EmployeeTable.js","components/SearchInput/SearchInput.js","components/utils/API.js","components/EmployeeMain/index.js","components/Header/index.js","App.js","index.js"],"names":["EmployeeTable","props","className","scope","data-name","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","name","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","SearchInput","onSubmit","handleFormSubmit","value","onChange","handleInputChange","type","placeholder","axios","get","EmployeeMain","search","employees","sortDir","sortDirectory","event","preventDefault","target","setState","filterEmployeesData","toLowerCase","trim","data","filter","concat","includes","replace","key","primary","secondary","sortedStaff","reverse","sort","a","b","localeCompare","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","results","catch","err","console","log","this","Component","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d09224ff.chunk.js","sourcesContent":["import React from \"react\";\n\n// Set table with columns and rows, pass props, return the table with sorts\nconst EmployeeTable = (props) => {\n  return (\n    <table className=\"table table-dark table-striped table-hover text-center table-sortable\">\n      {/* header of table */}\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          \n          <th scope=\"col\" data-name=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n{/* LISTENERS FOR SORTING COLUMNS AFTER CLICKED */}\n          <th scope=\"col\"><span onClick={() => props.sortBy(\"phone\")}>Phone</span></th>\n\n          <th scope = \"col\"><span onClick ={() => props.sortBy(\"email\")}>Email</span></th>\n\n          <th scope =\"col\"><span onClick ={() => props.sortBy(\"dob\",\"date\")}>DOB</span></th>\n        </tr>\n      </thead>\n\n\n      {/* body of table */}\n      <tbody>\n        {/* CREATE A NEW ARRAY OF FIRST AND LAST NAMES */}\n        {props.state.filteredEmployees.map((employee) => {\n          const {first, last} = employee.name;\n          const fullName = `${first} ${last}`;\n\n          // FORMAT THE DOB DATE\n          const dob= props.formatDate(employee.dob.date)\n\n          return (\n            <tr key ={employee.login.uuid}>\n              <td>\n                <img src = {employee.picture.thumbnail} alt={fullName}/>\n              </td>\n              <td className =\"align-middle\">{fullName}</td>\n              <td className =\"align-middle\">\n                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a>\n              </td>\n              <td className = \"align-middle email\">\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n              </td>\n              <td className ='align-middle'>{dob}</td>\n              </tr>  \n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeTable;","import React from \"react\";\n\nconst SearchInput = (props) => {\n\n    return(\n        <nav className=\"navbar navbar-danger bg-danger justify-content-center\">\n            <form className = \"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n                <input\n                className =\"form-control\"\n                value ={props.value}\n                name=\"search\"\n                onChange={props.handleInputChange}\n                type=\"search\"\n                placeholder='Search'\n                />\n            </form>\n\n\n        </nav>\n    )\n\n}\n\n    \nexport default SearchInput;","import axios from \"axios\";\n\n// CONST VARIABLE OF 150 RANDOM USERS\nconst URL = 'https://randomuser.me/api/?results=150&nat=us'\n\n/* eslint-disable-next-line */\nexport default{\n  searchEmployees: function() {\n    return axios.get(URL);\n  }\n}","import React, { Component } from \"react\";\n\nimport EmployeeTable from \"../EmployeeTable/EmployeeTable\";\nimport SearchInput from \"../SearchInput/SearchInput\";\nimport API from \"../utils/API\";\n\nclass EmployeeMain extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    sortDir: this.sortDirectory,\n  };\n\n  // SORTING EACH COLUMN \n  get sortDirectory() {\n    return {\n      name: \"\",\n      email:\"\",\n      phone: \"\",\n      dob: \"\",\n    };\n  }\n\n  // When this component mounts, call the api 'https://randomuser.me/api/?results=150'\n  componentDidMount() {\n    API.searchEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  // When the form is submitted, search the  API for the value of `this.state.search`\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  // UPDATE THE SEARCH VALUE IN STATE TO FILTER BY EMPLOYEE NAME\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployeesData(value.toLowerCase().trim());\n  };\n\n  // A FX THAT RETURNS A NEW ARRAY WITH FILTER METHOD AND UPDATES STATE\n  filterEmployeesData = (data) => {\n    if (data) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n              .toLowerCase()\n              .concat(\" \", employee.name.last.toLowerCase())\n              .includes(data) ||\n            employee.phone.includes(data) ||\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(data) ||\n            employee.email.includes(data) ||\n            this.formatDate(employee.dob.date).includes(data)\n          );\n        }),\n      });\n    } else {\n      this.setState({ filteredEmployees: this.state.employees });\n    }\n  };\n\n  // SORTING ENGINE--using a key of specific object\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedStaff = this.state.filteredEmployees;\n    if (this.state.sortDir[key]) {\n      this.setState({\n        filteredEmployees: sortedStaff.reverse(),\n        sortDir: {\n          ...this.sortDirectory,\n          [key]: this.state.sortDir[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedStaff = this.state.filteredEmployees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // if secondary and primary are ===,\n        // and with sorting by last name and they are the same, then sort by first name instead\n\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        filteredEmployees: sortedStaff,\n        sortDir: { ...this.sortDirectory, [key]: \"asc\" },\n      });\n    }\n  };\n\n  // FORMATS DATE AND CALLED AS PROPS IN EmployeeTable\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join the formatted date with dash delimeter\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <SearchInput\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <div className=\"container mt\">\n          <EmployeeTable\n            state={this.state}\n            sortBy={this.sortBy}\n            filteredEmployees={this.filterEmployeesData}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EmployeeMain;","import React from 'react';\nimport \"./styles.css\";\n\nconst Header = () => {\n    return(\n        <header>\n            <h1 className=\"text-center\">Employee Directory</h1>\n            <p className='text-center'>\n                Search by name or click on the columns to filter by name. \n            </p>\n        </header>\n    );\n};\nexport default Header;","import React from \"react\";\nimport EmployeeMain from \"./components/EmployeeMain\";\nimport Header from \"./components/Header\"\n\n  function App() {\n    return (\n      <div>\n      <Header/>\n        <EmployeeMain />\n      </div>\n    );\n  }\n  \n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}